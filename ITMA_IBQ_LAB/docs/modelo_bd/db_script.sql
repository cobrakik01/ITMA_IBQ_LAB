-- MySQL Script generated by MySQL Workbench
-- 06/12/15 19:28:59
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema itma_ibq_lab
-- -----------------------------------------------------
-- Control de materiales de laboratorio de IBQ.

-- -----------------------------------------------------
-- Schema itma_ibq_lab
--
-- Control de materiales de laboratorio de IBQ.
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `itma_ibq_lab` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `itma_ibq_lab` ;

-- -----------------------------------------------------
-- Table `itma_ibq_lab`.`carreras`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itma_ibq_lab`.`carreras` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre_carrera` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `nombre_carrera_UNIQUE` (`nombre_carrera` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itma_ibq_lab`.`alumnos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itma_ibq_lab`.`alumnos` (
  `no_control` VARCHAR(9) NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido_paterno` VARCHAR(45) NOT NULL,
  `apellido_materno` VARCHAR(45) NOT NULL,
  `carrera_id` INT NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`no_control`),
  INDEX `fk_alumnos_carreras1_idx` (`carrera_id` ASC),
  CONSTRAINT `fk_alumnos_carreras1`
    FOREIGN KEY (`carrera_id`)
    REFERENCES `itma_ibq_lab`.`carreras` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itma_ibq_lab`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itma_ibq_lab`.`usuarios` (
  `alumno_no_control` VARCHAR(9) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`alumno_no_control`),
  INDEX `fk_usuarios_alumnos1_idx` (`alumno_no_control` ASC),
  CONSTRAINT `fk_usuarios_alumnos1`
    FOREIGN KEY (`alumno_no_control`)
    REFERENCES `itma_ibq_lab`.`alumnos` (`no_control`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itma_ibq_lab`.`grupos_usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itma_ibq_lab`.`grupos_usuarios` (
  `nombre_grupo` VARCHAR(45) NOT NULL,
  `usuario_alumno_no_control` VARCHAR(9) NOT NULL,
  PRIMARY KEY (`nombre_grupo`, `usuario_alumno_no_control`),
  INDEX `fk_grupos_usuarios_usuarios1_idx` (`usuario_alumno_no_control` ASC),
  CONSTRAINT `fk_grupos_usuarios_usuarios1`
    FOREIGN KEY (`usuario_alumno_no_control`)
    REFERENCES `itma_ibq_lab`.`usuarios` (`alumno_no_control`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itma_ibq_lab`.`tipos_materiales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itma_ibq_lab`.`tipos_materiales` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre_materia` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `nombre_materia_UNIQUE` (`nombre_materia` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itma_ibq_lab`.`bloques`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itma_ibq_lab`.`bloques` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre_bloque` VARCHAR(4) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `nombre_bloque_UNIQUE` (`nombre_bloque` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itma_ibq_lab`.`materiales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itma_ibq_lab`.`materiales` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `uri_imagen` VARCHAR(200) NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `cantidad_minima` INT NOT NULL DEFAULT 0,
  `cantidad_disponible` INT NOT NULL,
  `descripcion` VARCHAR(500) NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `tipos_materiales_id` INT NOT NULL,
  `bloque_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_materiales_tipos_materiales1_idx` (`tipos_materiales_id` ASC),
  INDEX `fk_materiales_bloques1_idx` (`bloque_id` ASC),
  CONSTRAINT `fk_materiales_tipos_materiales1`
    FOREIGN KEY (`tipos_materiales_id`)
    REFERENCES `itma_ibq_lab`.`tipos_materiales` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_materiales_bloques1`
    FOREIGN KEY (`bloque_id`)
    REFERENCES `itma_ibq_lab`.`bloques` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itma_ibq_lab`.`profesores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itma_ibq_lab`.`profesores` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido_materno` VARCHAR(45) NOT NULL,
  `apellido_paterno` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itma_ibq_lab`.`prestamos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itma_ibq_lab`.`prestamos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fecha_prestamo` DATETIME NOT NULL COMMENT 'Fecha en la que serializa el préstamo.',
  `fecha_devolucion` DATETIME NOT NULL COMMENT 'Fecha en la que debería de devolverse el material prestado (Fecha programada de devolución).',
  `fecha_devolucion_real` DATETIME NULL COMMENT 'Fecha real en la que se devolvió el material prestado, esto pude suceder cuando el usuario revuelve el material uno o varios días después de la fecha programada de devolución.',
  `observaciones_prestamo` VARCHAR(500) NULL COMMENT 'En esta observación se colocara una descripción del estado del material a prestar.',
  `observaciones_devolucion` VARCHAR(500) NULL COMMENT 'En esta observación se colocara una descripción del estado en el que se regresó el material, el estado del materia deberá de coincidir con el estado en el que se entregó al realizar el préstamo.',
  `alumno_no_control` VARCHAR(9) NOT NULL,
  `profesor_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_prestamos_alumnos1_idx` (`alumno_no_control` ASC),
  INDEX `fk_prestamos_profesores1_idx` (`profesor_id` ASC),
  CONSTRAINT `fk_prestamos_alumnos1`
    FOREIGN KEY (`alumno_no_control`)
    REFERENCES `itma_ibq_lab`.`alumnos` (`no_control`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_prestamos_profesores1`
    FOREIGN KEY (`profesor_id`)
    REFERENCES `itma_ibq_lab`.`profesores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itma_ibq_lab`.`materiales_prestamo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itma_ibq_lab`.`materiales_prestamo` (
  `prestamo_id` INT NOT NULL,
  `material_id` INT NOT NULL,
  `cantidad` INT NOT NULL,
  `observaciones_prestamo` VARCHAR(500) NULL,
  `observaciones_devolucion` VARCHAR(500) NULL,
  PRIMARY KEY (`prestamo_id`, `material_id`),
  INDEX `fk_prestamos_has_materiales_materiales1_idx` (`material_id` ASC),
  INDEX `fk_prestamos_has_materiales_prestamos1_idx` (`prestamo_id` ASC),
  CONSTRAINT `fk_prestamos_has_materiales_prestamos1`
    FOREIGN KEY (`prestamo_id`)
    REFERENCES `itma_ibq_lab`.`prestamos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_prestamos_has_materiales_materiales1`
    FOREIGN KEY (`material_id`)
    REFERENCES `itma_ibq_lab`.`materiales` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itma_ibq_lab`.`periodos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itma_ibq_lab`.`periodos` (
  `periodo` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`periodo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itma_ibq_lab`.`inventarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itma_ibq_lab`.`inventarios` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fecha_inventario` DATETIME NOT NULL,
  `anio` YEAR NOT NULL,
  `observaciones` VARCHAR(500) NULL,
  `periodo` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_inventarios_periodos1_idx` (`periodo` ASC),
  CONSTRAINT `fk_inventarios_periodos1`
    FOREIGN KEY (`periodo`)
    REFERENCES `itma_ibq_lab`.`periodos` (`periodo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itma_ibq_lab`.`unidades_medida`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itma_ibq_lab`.`unidades_medida` (
  `unidad` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`unidad`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itma_ibq_lab`.`materiales_inventario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itma_ibq_lab`.`materiales_inventario` (
  `inventarios_id` INT NOT NULL,
  `materiales_id` INT NOT NULL,
  `unidad_medida` VARCHAR(20) NOT NULL,
  `cantidad` INT NOT NULL,
  `observaciones` VARCHAR(500) NULL,
  PRIMARY KEY (`inventarios_id`, `materiales_id`),
  INDEX `fk_inventarios_has_materiales_materiales1_idx` (`materiales_id` ASC),
  INDEX `fk_inventarios_has_materiales_inventarios1_idx` (`inventarios_id` ASC),
  INDEX `fk_materiales_inventario_unidades_medida1_idx` (`unidad_medida` ASC),
  CONSTRAINT `fk_inventarios_has_materiales_inventarios1`
    FOREIGN KEY (`inventarios_id`)
    REFERENCES `itma_ibq_lab`.`inventarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_inventarios_has_materiales_materiales1`
    FOREIGN KEY (`materiales_id`)
    REFERENCES `itma_ibq_lab`.`materiales` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_materiales_inventario_unidades_medida1`
    FOREIGN KEY (`unidad_medida`)
    REFERENCES `itma_ibq_lab`.`unidades_medida` (`unidad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itma_ibq_lab`.`unidades_medida_tipos_materiales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itma_ibq_lab`.`unidades_medida_tipos_materiales` (
  `unidad_medida` VARCHAR(20) NOT NULL,
  `tipo_material_id` INT NOT NULL,
  PRIMARY KEY (`unidad_medida`, `tipo_material_id`),
  INDEX `fk_unidades_medida_has_tipos_materiales_tipos_materiales1_idx` (`tipo_material_id` ASC),
  INDEX `fk_unidades_medida_has_tipos_materiales_unidades_medida1_idx` (`unidad_medida` ASC),
  CONSTRAINT `fk_unidades_medida_has_tipos_materiales_unidades_medida1`
    FOREIGN KEY (`unidad_medida`)
    REFERENCES `itma_ibq_lab`.`unidades_medida` (`unidad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_unidades_medida_has_tipos_materiales_tipos_materiales1`
    FOREIGN KEY (`tipo_material_id`)
    REFERENCES `itma_ibq_lab`.`tipos_materiales` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itma_ibq_lab`.`sesiones_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itma_ibq_lab`.`sesiones_log` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `entrada` DATETIME NOT NULL,
  `salida` DATETIME NULL,
  `alumnos_no_control` VARCHAR(9) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_sesiones_log_alumnos1_idx` (`alumnos_no_control` ASC),
  CONSTRAINT `fk_sesiones_log_alumnos1`
    FOREIGN KEY (`alumnos_no_control`)
    REFERENCES `itma_ibq_lab`.`alumnos` (`no_control`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `itma_ibq_lab`.`alumnos_has_profesores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itma_ibq_lab`.`alumnos_has_profesores` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `alumnos_no_control` VARCHAR(9) NOT NULL,
  `profesores_id` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`, `alumnos_no_control`, `profesores_id`),
  INDEX `fk_alumnos_has_profesores_profesores1_idx` (`profesores_id` ASC),
  INDEX `fk_alumnos_has_profesores_alumnos1_idx` (`alumnos_no_control` ASC),
  CONSTRAINT `fk_alumnos_has_profesores_alumnos1`
    FOREIGN KEY (`alumnos_no_control`)
    REFERENCES `itma_ibq_lab`.`alumnos` (`no_control`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_alumnos_has_profesores_profesores1`
    FOREIGN KEY (`profesores_id`)
    REFERENCES `itma_ibq_lab`.`profesores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `itma_ibq_lab` ;

-- -----------------------------------------------------
-- Placeholder table for view `itma_ibq_lab`.`view_deudores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `itma_ibq_lab`.`view_deudores` (`'no_prestamo'` INT, `'numero_control'` INT, `'alumno'` INT, `'carrera'` INT, `fecha_prestamo` INT, `fecha_devolucion_programada` INT);

-- -----------------------------------------------------
-- View `itma_ibq_lab`.`view_deudores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `itma_ibq_lab`.`view_deudores`;
USE `itma_ibq_lab`;
CREATE  OR REPLACE VIEW `view_deudores` AS
	SELECT 
	pres.id as 'no_prestamo', 
    pres.alumno_no_control as 'numero_control',
    concat(al.nombre, ' ', al.apellido_paterno, ' ', al.apellido_materno) as 'alumno',
    carr.nombre_carrera as 'carrera',
    pres.fecha_prestamo,
    pres.fecha_devolucion as fecha_devolucion_programada
FROM itma_ibq_lab.prestamos as pres
inner join alumnos as al
	on al.no_control = pres.alumno_no_control
inner join carreras as carr
	on carr.id = al.carrera_id
where pres.fecha_devolucion_real is null and pres.fecha_devolucion < now();

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
